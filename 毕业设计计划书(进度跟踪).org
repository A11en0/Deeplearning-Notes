#+TITLE: 《面向社交网络数据的主题跟踪算法与系统实现》
#+SUBTITLE: 毕业设计计划书 (进度跟踪)
#+AUTHOR: 葛宇航

#+OPTIONS: toc:nil num:3 H:4 ^:nil pri:t
#+MACRO: kbd @@html:<kbd>$1</kbd>@@

#+BEGIN_abstract

毕业设计计划书《面向社交网络数据的主题跟踪算法与系统实现》，同时用于跟踪记录整个学习过程。 采用Emacs Org-mode 编写， 使用 agenda 进行日程管理。

#+END_abstract

#+TOC: headlines 2

* STARTED 理论知识学习 (2019-12-01 - 2020-2-01)
DEADLINE: <2020-02-01 Sat> SCHEDULED: <2019-12-01 Sun>

:LOGBOOK:
- State "STARTED"    from              <2019-12-10 Tue 17:14>
:END:
** STARTED 待学习知识清单
SCHEDULED: <2019-12-01 Sun>
:LOGBOOK:
- State "STARTED"    from              [2019-12-19 Thu 12:52]
:END:
**** 短文本分类、数据流分类
**** 主题模型
:LOGBOOK:
- State "STARTED"    from              [2019-12-19 Thu 12:54]
:END:
**** LDA
:LOGBOOK:
- State "STARTED"    from "TODO"       [2019-12-19 Thu 12:54]
:END:
**** OnlineBTM
:LOGBOOK:
- State "STARTED"    from "TODO"       [2019-12-19 Thu 12:54]
:END:
**** 特征选择
**** 半监督学习
**** 聚类
**** 分类器
:LOGBOOK:
- State "STARTED"    from              [2019-12-19 Thu 12:54]
:END:
***** SVM
***** 随机森林
***** 贝叶斯网络

** STARTED 阅读论文《基于Wikipedia语料扩展的短文本数据流分类方法研究》
SCHEDULED: <2019-12-01 Sun>
:LOGBOOK:

:END:
*** 前言 短文本数据流分类的问题与挑战

1) 文本长度短
2) *特征高维稀疏*
3) 没有足够的语义信息 --> 文本稀疏性问题 
4) 数据产生速度快、数量大，随时间产生潜在的漂移问题
5) 难以使用传统批处理算法快速适应

*** 第一章 有监督的短文本分类方法

**** 基于搜索引擎的短分类方法 

- 实验步骤 :: 
 1. 使用 Web 搜索扩充短文本 *ExpaNet*
 2. 将短文本和获取的相关文档均用词向量表示
 3. 将上述的的词向量丢进 *注意力机制（soft/hard attention）中*, 从而获得检索记忆，用于确定哪些文档是值得研究的
 4. 最后借助 *GRU模型* 根据注意力机制整合原始短文本 
 5. 可通过多次迭代上述过程，丰富短文本语义信息， *缓解稀疏性问题*

- 缺点 :: 
 1. 影响文本质量
 2. 耗时

tips：实验中是否需要使用Web扩充文本技术

**** 基于主题模型的短文本分类方法

- Phan等 (10) 提出的基于隐含主题的框架用于扩展短文本 ::
     借助 *LDA* 主题模型从外部语料库中挖掘隐含主题, 构建主题模型推断短文本主题分布, 选择概率高的主题扩展到短文本中，从而丰富语义信息

- Bouzaiz (11) 借助 LDA 模型从单词和文本两个层面扩展短文本 ::
     减少随机特征的选择, 利用特征间语义关系构建随机森林

- Vo和Ock (12) 从多种语料库中挖掘隐含主题 ::
     考虑短文本和其他词的语义关系寻找最适合主题扩展短文本

- Zhang (13) 提出新的短文本分类框架 ::
     该框架中新的词对应的主题会被视作新词整合进短文本
  
- Chen (14) 基于LDA和K近邻来提升短文本分类方法 :: 发现基于词袋模型的表示方法会导致某些不具备相同术语的短文本很难被正确分类, 基于LDA和K近邻，若两个文本某些术语具有相同的几个隐藏主题，则考虑文本之间相似，然后借助 K近邻方法进行分类
     
     *解决的问题： 借助LDA主题模型扩展短文本，缓解了数据稀疏性问题缺点： LDA本身依赖词袋模型的假设，忽略短文本数据中的语序和短语*

- Sun (15) 主题的N-gram模型（TNG） :: 基于上下文语义发现主题和短语的模型, 借助 *TNG* 构建一个 *特征扩展库*, 提出一种短文本的 *主题权值向量* 计算方法 --> 获得短文本 *主题倾向*, 根据主题倾向从特征扩展库中选择合适的词和短语扩展短文本
  
**** 基于隐藏规则和统计信息的短文本分类方法
- Kim (16) 基于语义标注的语言独立核方法（LIS） ::
     LIS在不需要语法标签和词汇数据库，有效的分类短文本数据

- Gao (17) 引入结构化的稀疏表示  :: 提出凸包项点选择方法，减少数据相关性和冗余性，提高分类有效性

- Zhang (18) 研究基于词汇关联规则的短文本分类方法 :: 首先挖掘训练集中存在的强关联规则,然后将规则加入短文本特征中提高短文本的特征密度，提高短文本准确性
  h 
- Rao (19) 提出一种主题级最大熵模型（TME）缓解短文本稀疏性 :: 用于短文本的 *社交情感分类*,*TME*通过挖掘短隐含主题、多重情感标签、众多读者的共同评分生成主题级特征,通过将特征映射到概念空间解决 *最大熵原理* 中的过拟合问题

*上述基于隐藏规则和统计信息，虽充分挖掘了短文本数据自身的隐藏规则和统计信息，但短文本本身存在的语义信息不足问题依然没有解决，因此分类效果难以大幅提升*

**** 基于深度学习相关技术的短文本分类方法

*** 第二章 有监督的短文本数据流分类方法

- Bouaziz (25) 提出LGLM模型，通过不断更新分类器提高数据流分类 ::

首先，根据初始训练集训练随机森林分类器，其次，当有数据到来时先利用初始分类器进行分类，同时结合主动学习方法将分错的短文本加入训练集，通过计算先前数据集和当前数据集信息增益的差值决定时候更新分类模型

- Ren(26)提出分层多标签短文本数据流分类 :: 

首先，基于实体链接和查询语句的排序方法扩展短文本，然后，通过将主题分成动态全局主题和局部主题构建动态概率主题分布。最后，使用基于块的结构优化策略分类短文本
   
- Li(27)提出一种增量式的集成模型适应短文本数据流 ::

首先，使用公开语义网络Probase用于扩展特征空间
   - 引入更多的基于短文本隐藏术语的语义上下文信息弥补数据的稀疏性
   - 同时减少噪音影响
   - 消除所有术语的歧义
基于概念簇的主题漂移检测算法用于追踪数据流中的主题漂移，构建增量式的集成模型预测短文本数据流
   
*** 第三章 基于文本扩展和漂移检测的短文本数据流分类算法研究 (本文实现方法)

**** 解决短文本稀疏性问题：

- 传统方法: ::
LDA 主题模型， 挖掘隐藏主题从Wiki扩展短文本

借助短文本数据本身潜在的规则和统计信息扩展短文本

- 存在的问题: ::
上述方法属于批处理算法，但由于社交平台产生的海量短文本数据量巨大，容易造成维度灾难，且随时间推移容易发生潜在漂移现象，因此批处理算法很难满足数据流分类的需求。为了分类短文本数据流，在线主题模型 OnlineBTM(Online Biterm topic model)被提出。

**** OnlineBTM (Online Biterm topic model)  在线主题模型


该模型根据等时间片原则，将短文本数据流划分为数据块，而每个数据块则是根据词对共现原则构建模型用以发现隐藏主题。

这里biterm 表示出现在短文本中的 *无序词对* 。但是词对比词更加稀疏，并且，OnlineBTM 未考虑概念漂移。

- 两个问题 :: 1. 维度灾难;  2. 概念漂移

**** 本文针对上述两种问题提出基于OnlineBTM的新算法

实验步骤:

1) 使用Wikipedia作为外部语聊库获取相同主题的数据扩展短文本
2) 借助OnlineBTM选择有代表性的主题而非词来表示扩展后的短文本
3) 根据类标签将用于构建集成模型的数据块划分为类簇
4) 计算新的数据块与每个类簇的语义距离
5) 选择最小的语义距离值判断新数据块相对用于构建集成模型的数据块是否发生了概念漂移
6) 根据是否发生概念漂移更新集成模型

   疑问 1： 如何获得有类标签的数据？（爬取数据后通过人工标注是否工作量过大？）
  
   疑问 2： H个基分类器可以相同吗？如何将分类器集成？分类器数量过多是否影响效率

**** 基于主题的概念漂移检测算法


** TODO 阅读英文论文
 review & survey & tutorial & 综述

* WAITING 编码与实现 (2020-2-01 - 2020-3-01)                       :WAITING:
:LOGBOOK:
- State "WAITING"    from "TODO"       [2019-12-19 Thu 13:03]
- State "TODO"       from "DONE"       <2019-12-10 Tue 17:21>
:END:
** 爬虫获取数据
拟采用Python Scrapy 框架

** 算法模型实现
  拟采用SVM OnlineBTM 集成模型
# *** Table

#+CAPTION: Table Caption
# | \(N\) | \(N^2\) | \(N^3\) | \(N^4\) | \(\sqrt n\) | \(\sqrt[4]N\) |
# |-------+---------+---------+---------+-----------+-----------------|
# |     1 |       1 |       1 |       1 |         1 |               1 |
# |     2 |       4 |       8 |      16 |    1.4142 |          1.1892 |
# |     3 |       9 |      27 |      81 |    1.7321 |          1.3161 |
# |-------+---------+---------+---------+-----------+-----------------|
#+TBLFM: $2=$1^2::$3=$1^3::$4=$1^4::$5=sqrt($1)::$6=sqrt(sqrt(($1)))

# *** List

# **** The ordered list

# 1. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
# 2. Donec et massa sit amet ligula maximus feugiat.
# 3. Morbi consequat orci et tincidunt sagittis.

# **** Unordered list

# - Aliquam non metus nec elit pellentesque scelerisque.
# - In accumsan nunc ac orci varius hendrerit.
# - Suspendisse non eros eu nisi finibus maximus.

# **** Definition list

# - Lorem ipsum :: dolor sit amet, consectetur adipiscing elit.  Mauris laoreet
#      sollicitudin venenatis.  Duis sed consequat dolor.
# - Etiam feugiat :: pharetra sapien et semper.  Nunc ornare lacus sit amet massa
#      auctor, vitae aliquam eros interdum.  Mauris arcu ante, imperdiet vel purus
#      ac, bibendum faucibus diam.  Ut blandit nec mi at ultricies.  Donec eget
#      mattis nisl.  In sed nibh felis.  Cras quis convallis orci.
# - Sed aliquam :: odio sed faucibus aliquam, arcu augue elementum justo, ut
#      vulputate ligula sem in augue.  Maecenas ante felis, pellentesque auctor
#      semper non, eleifend quis ante.  Fusce enim orci, suscipit ac dapibus et,
#      fermentum eu tortor.  Duis in facilisis ante, quis faucibus dolor.  Etiam
#      maximus lorem quis accumsan vehicula.

# 
# *** Picture

# #+CAPTION: Demo Picture with Caption
# [[file:./img/pic-demo.png]]

# And a really wide picture.

# #+CAPTION: A really long picture
# [[file:img/long-img.png]]

*** Math (Just a template, NO MEANING!)

\begin{align}
\mathcal{F}(a) &= \frac{1}{2\pi i}\oint_\gamma \frac{f(z)}{z - a}\,dz\\
\int_D (\nabla\cdot \mathcal{F})\,dV &=\int_{\partial D}\mathcal{F}\cdot n\, dS
\end{align}


** Web实现
拟采用Python Django 框架

#+CAPTION: Just use as a template
#+NAME: tab:util

| Utility     | Description                                     |
|-------------+-------------------------------------------------|
| [[https://www.lri.fr/~filliatr/bibtex2html/][bibtex2html]] | Export citations in bib files, if any, to html. |
| [[https://www.mathjax.org/][MathJax]]     | Render math equations.                          |

* WAITING 撰写论文 (2020-3-01 - 2020-4-01)
